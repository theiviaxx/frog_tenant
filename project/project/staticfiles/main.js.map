{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/add-tenant/add-tenant.component.css","webpack:///./src/app/add-tenant/add-tenant.component.html","webpack:///./src/app/add-tenant/add-tenant.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/tenant-list/tenant-list.component.css","webpack:///./src/app/tenant-list/tenant-list.component.html","webpack:///./src/app/tenant-list/tenant-list.component.ts","webpack:///./src/app/tenant.service.ts","webpack:///./src/app/tenant/tenant.component.css","webpack:///./src/app/tenant/tenant.component.html","webpack:///./src/app/tenant/tenant.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div class=\\\"main-content\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-4\\\">\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-header card-header-success\\\">\\n                        <h4 class=\\\"card-title\\\">Add Tenant</h4>\\n                        <p class=\\\"card-category\\\">Add a new Frog tenant</p>\\n                    </div>\\n                    <div class=\\\"card-body\\\">\\n                        <form [formGroup]=\\\"form\\\">\\n                            <div class=\\\"row\\\">\\n                                <mat-form-field class=\\\"example-full-width\\\">\\n                                    <input matInput placeholder=\\\"Domain\\\" formControlName=\\\"domain\\\">\\n                                </mat-form-field>\\n                            </div>\\n                            <mat-spinner-button (btnClick)=\\\"create()\\\" [options]=\\\"options\\\">Submit</mat-spinner-button>\\n                        </form>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"col-md-8\\\">\\n                <div class=\\\"card card-profile\\\">\\n                    <div class=\\\"card-body\\\">\\n                        <pre>Output goes here...</pre>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\nimport { Subscription } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { MatProgressButtonOptions } from 'mat-progress-buttons';\n\nimport { TenantService } from '../tenant.service';\n\n@Component({\n    selector: 'add-tenant',\n    templateUrl: './add-tenant.component.html',\n    styleUrls: ['./add-tenant.component.css']\n})\nexport class AddTenantComponent implements OnInit, OnDestroy {\n    public form: FormGroup;\n    public options: MatProgressButtonOptions = {\n        active: false,\n        text: 'Submit',\n        spinnerSize: 19,\n        raised: true,\n        stroked: true,\n        buttonColor: 'primary',\n        spinnerColor: 'accent',\n        fullWidth: false,\n        disabled: false,\n        mode: 'indeterminate',\n    };\n\n    private subs: Subscription[];\n\n    constructor(private tenantservice: TenantService, private fb: FormBuilder) {\n        this.subs = [];\n        this.form = fb.group({\n            name: ['', Validators.required],\n            domain: ['', Validators.required]\n        });\n    }\n\n    ngOnInit() {\n        let sub = this.tenantservice.created\n            .pipe(\n                filter(tenant => tenant.domain === this.form.value.domain)\n            )\n            .subscribe(tenant => {\n                this.options.active = false;\n            });\n        this.subs.push(sub);\n    }\n\n    ngOnDestroy() {\n        this.subs.forEach(sub => sub.unsubscribe());\n    }\n\n    create() {\n        let value = this.form.value;\n        this.options.active = true;\n        this.tenantservice.create(value.domain);\n    }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"wrapper\\\">\\n    <div class=\\\"sidebar\\\" data-color=\\\"danger\\\" data-background-color=\\\"white\\\">\\n        <div class=\\\"logo\\\">\\n            <a href=\\\"/\\\" class=\\\"simple-text\\\">\\n                Frog Tenants\\n            </a>\\n        </div>\\n        <div class=\\\"sidebar-wrapper\\\">\\n            <tenant-list></tenant-list>\\n        </div>\\n    </div>\\n    <div class=\\\"main-panel\\\">\\n        <div *ngIf=\\\"tenant$ | async as tenant\\\">\\n            <add-tenant *ngIf=\\\"tenant.id === 0\\\"></add-tenant>\\n            <tenant *ngIf=\\\"tenant.id !== 0\\\" [tenant]=\\\"tenant\\\"></tenant>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Tenant, TenantService } from './tenant.service';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n    title = 'tenant-app';\n\n    public tenant$: Observable<Tenant>;\n\n    constructor(private tenantservice: TenantService) {\n\n    }\n\n    ngOnInit() {\n        this.tenant$ = this.tenantservice.tenant;\n    }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MatCardModule, MatListModule, MatInputModule, MatButtonModule, MatDividerModule, MatSidenavModule, MatIconModule } from '@angular/material';\nimport { MatProgressButtonsModule } from 'mat-progress-buttons';\n\nimport { AppComponent } from './app.component';\nimport { TenantComponent } from './tenant/tenant.component';\nimport { TenantListComponent } from './tenant-list/tenant-list.component';\nimport { AddTenantComponent } from './add-tenant/add-tenant.component';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        TenantComponent,\n        TenantListComponent,\n        AddTenantComponent\n    ],\n    imports: [\n        BrowserModule,\n        HttpClientModule,\n        FormsModule,\n        ReactiveFormsModule,\n        BrowserAnimationsModule,\n\n        MatCardModule,\n        MatListModule,\n        MatInputModule,\n        MatButtonModule,\n        MatDividerModule,\n        MatSidenavModule,\n        MatListModule,\n        MatIconModule,\n\n        MatProgressButtonsModule\n    ],\n    providers: [],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"/* mat-form-field { width: 100%; }\\r\\n.row:first-child { margin-bottom: 12px; } */\\r\\n\\r\\n.example-container {\\r\\n  position: absolute;\\r\\n  top: 60px;\\r\\n  bottom: 60px;\\r\\n  left: 0;\\r\\n  right: 0;\\r\\n}\\r\\n\\r\\n.example-sidenav {\\r\\n  display: flex;\\r\\n  min-width: 300px;\\r\\n}\\r\\n\"","module.exports = \"<ul class=\\\"nav\\\">\\n    <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" (click)=\\\"setCurrent(null)\\\">\\n            <i class=\\\"material-icons\\\">add</i>\\n            <p>Add Tenant</p>\\n        </a>\\n    </li>\\n    <li *ngFor=\\\"let tenant of tenants$ | async\\\" class=\\\"nav-item\\\"\\n        [class.active]=\\\"(activetenant$ | async)?.id == tenant.id\\\">\\n        <a class=\\\"nav-link\\\" (click)=\\\"setCurrent(tenant)\\\">\\n            <i class=\\\"material-icons\\\">home</i>\\n            <p>{{tenant.domain}}</p>\\n        </a>\\n    </li>\\n</ul>\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\n\nimport { Observable } from 'rxjs';\n\nimport { Tenant, TenantService } from '../tenant.service';\nimport { filter } from 'rxjs/operators';\n\n@Component({\n    selector: 'tenant-list',\n    templateUrl: './tenant-list.component.html',\n    styleUrls: ['./tenant-list.component.css']\n})\nexport class TenantListComponent implements OnInit {\n    public tenants$: Observable<Tenant[]>;\n    public activetenant$: Observable<Tenant>;\n\n    constructor(private tenantservice: TenantService) {\n\n    }\n\n    ngOnInit() {\n        this.tenants$ = this.tenantservice.tenants;\n        this.activetenant$ = this.tenantservice.tenant;\n    }\n\n    setCurrent(tenant: Tenant) {\n        if (tenant === null) {\n            tenant = new Tenant();\n            tenant.id = 0;\n        }\n        this.tenantservice.setCurrent(tenant);\n        // this.activetenant = tenant;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Subject } from 'rxjs';\n\nexport class Tenant {\n    id: number;\n    name: string;\n    domain: string;\n    created: Date;\n    image: any;\n    image_count: number;\n    video_count: number;\n    storage: number;\n    site_config: any;\n    history: number[];\n    tenant_created: boolean;\n}\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TenantService {\n    public tenants: Subject<Tenant[]>;\n    public tenant: Subject<Tenant>;\n    public created: Subject<Tenant>;\n\n    private cache: Tenant[];\n\n    constructor(private http: HttpClient) {\n        this.tenants = new Subject<Tenant[]>();\n        this.tenant = new Subject<Tenant>();\n        this.created = new Subject<Tenant>();\n        this.cache = [];\n\n        http.get(\"/tenant/\").subscribe(data => {\n            this.cache = data[\"items\"] as Tenant[];\n            this.tenants.next(this.cache);\n        });\n    }\n\n    create(domain: string) {\n        let url = '/tenant/';\n        let options = {\n            body: {\n                domain: domain,\n            },\n            withCredentials: true\n        };\n\n        this.http.post(url, options)\n            .subscribe(data => {\n                let tenant = data as Tenant;\n                if (tenant.tenant_created) {\n                    this.cache.push(tenant);\n                }\n\n                this.tenants.next(this.cache);\n                this.created.next(tenant);\n            });\n    }\n\n    setCurrent(tenant: Tenant) {\n        this.tenant.next(tenant);\n    }\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-transparent  navbar-absolute fixed-top\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <div class=\\\"navbar-wrapper\\\">\\n            <a class=\\\"navbar-brand\\\" href=\\\"http://{{tenant.domain}}\\\" rel=\\\"noopener noreferrer\\\"\\n                target=\\\"_blank\\\">{{tenant.domain}}</a>\\n            <a mat-raised-button class=\\\"btn btn-danger pull-right\\\" href=\\\"http://{{tenant.domain}}/admin\\\"\\n                rel=\\\"noopener noreferrer\\\" target=\\\"_blank\\\">Admin Site</a>\\n        </div>\\n    </div>\\n</nav>\\n\\n<div class=\\\"main-content\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-4 col-md-6 col-sm-6\\\">\\n                <div class=\\\"card card-stats\\\">\\n                    <div class=\\\"card-header card-header-warning card-header-icon\\\">\\n                        <div class=\\\"card-icon\\\">\\n                            <i class=\\\"material-icons\\\">content_copy</i>\\n                        </div>\\n                        <p class=\\\"card-category\\\">Used Space</p>\\n                        <h3 class=\\\"card-title\\\">49/50\\n                            <small>GB</small>\\n                        </h3>\\n                    </div>\\n                    <div class=\\\"card-footer\\\">\\n                        <div class=\\\"stats\\\">\\n                            <i class=\\\"material-icons text-danger\\\">warning</i>\\n                            <a href=\\\"javascript:void(0)\\\">Get More Space...</a>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"col-lg-4 col-md-6 col-sm-6\\\">\\n                <div class=\\\"card card-stats\\\">\\n                    <div class=\\\"card-header card-header-success card-header-icon\\\">\\n                        <div class=\\\"card-icon\\\">\\n                            <i class=\\\"material-icons\\\">person</i>\\n                        </div>\\n                        <p class=\\\"card-category\\\">Users</p>\\n                        <h3 class=\\\"card-title\\\">{{tenant.user_count}}</h3>\\n                        <div class=\\\"card-body table-responsive\\\">\\n                            <table class=\\\"table table-hover\\\">\\n                                <thead class=\\\"text-warning\\\">\\n                                    <th>Name</th>\\n                                    <th>Email</th>\\n                                </thead>\\n                                <tbody>\\n                                    <tr *ngFor=\\\"let manager of tenant.managers\\\">\\n                                        <td>{{manager.fields.username}}</td>\\n                                        <td><a href=\\\"mailto:{{manager.fields.email}}\\\">{{manager.fields.email}}</a>\\n                                        </td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"card-footer\\\">\\n                        <div class=\\\"stats\\\">\\n                            <i class=\\\"material-icons\\\">person</i> {{tenant.user_count}} total users\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"col-lg-4 col-md-6 col-sm-6\\\">\\n                <div class=\\\"card card-stats\\\">\\n                    <div class=\\\"card-header card-header-danger card-header-icon\\\">\\n                        <div class=\\\"card-icon\\\">\\n                            <i class=\\\"material-icons\\\">photo_library</i>\\n                        </div>\\n                        <p class=\\\"card-category\\\">Content</p>\\n                        <h3 class=\\\"card-title\\\">{{tenant.image_count + tenant.video_count}}</h3>\\n                        <div class=\\\"card-body table-responsive\\\">\\n                            <table class=\\\"table table-hover\\\">\\n                                <thead class=\\\"text-warning\\\">\\n                                    <th>Type</th>\\n                                    <th>Count</th>\\n                                </thead>\\n                                <tbody>\\n                                    <tr>\\n                                        <td>Image</td>\\n                                        <td>{{tenant.image_count}}</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>Video</td>\\n                                        <td>{{tenant.video_count}}</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>Marmoset</td>\\n                                        <td>0</td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"card-footer\\\">\\n                        <div class=\\\"stats\\\">\\n                            <i class=\\\"material-icons\\\">access_time</i> Last upload:\\n                            {{tenant.image?.created | date}}\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <div class=\\\"card card-chart\\\">\\n                    <div class=\\\"card-header card-header-success\\\">\\n                        <div class=\\\"ct-chart\\\" id=\\\"dailySalesChart\\\"></div>\\n                    </div>\\n                    <div class=\\\"card-body\\\">\\n                        <h4 class=\\\"card-title\\\">Daily Uploads</h4>\\n                    </div>\\n                    <div class=\\\"card-footer\\\">\\n                        <div class=\\\"stats\\\">\\n                            <i class=\\\"material-icons\\\">access_time</i> updated 4 minutes ago\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\n\nimport { Subscription } from 'rxjs';\nimport * as Chartist from 'chartist';\n\nimport { Tenant, TenantService } from '../tenant.service';\n\n@Component({\n    selector: 'tenant',\n    templateUrl: './tenant.component.html',\n    styleUrls: ['./tenant.component.css']\n})\nexport class TenantComponent implements OnInit, OnDestroy {\n    @Input() tenant: Tenant;\n\n    private subs: Subscription[];\n\n    constructor(private tenantservice: TenantService) {\n        this.subs = [];\n    }\n\n    ngOnInit() {\n        let sub = this.tenantservice.tenant.subscribe(tenant => {\n            this.tenant = tenant;\n\n            setTimeout(() => this.renderChart(), 0);\n        });\n        this.subs.push(sub);\n    }\n\n    ngOnDestroy() {\n        this.subs.forEach(sub => sub.unsubscribe());\n    }\n\n    renderChart() {\n        const dataDailySalesChart: any = {\n            labels: ['', '', '', '', '', '', ''],\n            series: [\n                this.tenant.history\n            ]\n        };\n\n        const optionsDailySalesChart: any = {\n            lineSmooth: Chartist.Interpolation.cardinal({\n                tension: 0\n            }),\n            low: 0,\n            high: Math.max(...this.tenant.history) + 10, // creative tim: we recommend you to set the high sa the biggest value + something for a better look\n            chartPadding: { top: 0, right: 0, bottom: 0, left: 0 },\n        }\n\n        new Chartist.Line('#dailySalesChart', dataDailySalesChart, optionsDailySalesChart);\n    }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}